# This file contains all of the editor's buffer and window modes
#
# It should be processed by the "mktbls" program, which produces the
#  headers #included by main.c
#
# All that is necessary to add a new mode to the editor is to add
#  an entry to this file, write the supporting code, and rebuild.
#
# If you want to know which modes are already taken, look
#  at nemode.h, after you build it.
#
# The modes are table entries in the BUFFER and WINDOW structures.
#
# $Log: modetbl,v $
# Revision 1.12  1993/06/23 21:31:16  pgf
# added "undolimit" mode
#
# Revision 1.11  1993/06/18  15:57:06  pgf
# tom's 3.49 changes
#
# Revision 1.10  1993/04/28  17:15:56  pgf
# got rid of LOOKTAGS mode and ifdefs
#
# Revision 1.9  1993/04/21  14:36:56  pgf
# added VAL_GLOB
#
# Revision 1.8  1993/04/20  12:18:32  pgf
# see tom's 3.43 CHANGES
#
# Revision 1.7  1993/04/08  11:09:27  pgf
# implemented horizscroll mode
#
# Revision 1.6  1993/03/18  17:40:31  pgf
# renamed VITABPOS to ALTTABPOS
#
# Revision 1.5  1993/03/16  10:53:21  pgf
# see 3.36 section of CHANGES file
#
# Revision 1.4  1993/03/05  18:46:39  pgf
# fix for tab cursor positioning in insert mode, and mode to control
# positioning style
#
# Revision 1.3  1993/03/05  17:50:54  pgf
# see CHANGES, 3.35 section
#
# Revision 1.2  1993/02/24  10:59:02  pgf
# see 3.34 changes, in CHANGES file
#
# Revision 1.1  1993/02/08  14:52:04  pgf
# Initial revision
#
#
# Mode-table entries.  Capitalized letters are used for abbreviations.
# The second column is the root of the index-definition.
# The third column is flags used to control updates after a mode is changed.
# The fourth column (if present) controls conditional compilation of the mode.
.globals
bool								# GMD prefix
	"AutoBuffer"	ABUFF 		0			# auto-buffer (lru)
	"dirc"		DIRC		0			# directory-completion (slow!)
	"Alt-TabPos"	ALTTABPOS	0			# emacs-style cursor positioning
	"HIstory"	HISTORY		0			# command-history
	"ImplyBuffer"	IMPLYBUFF 	0			# imply-buffer (vi-like)
	"SameBangs"	SAMEBANGS	0			# use same "!!" data for ^X-!
regex								# VAL_ prefix
	"C-SUFfixes"	CSUFFIXES	0			# match against filenames to turn on c-mode
string								# VAL_ prefix
	"glob"		GLOB		0			# select filename globbing style

.buffers
bool								# MD prefix
	"AutoIndent"	AIND		0			# auto-indent
	"AutoSave"	ASAVE		0			# auto-save mode
	"BackspaceLimit" BACKLIMIT	0			# backspace limited in insert mode
	"cmode"		CMOD		WFHARD			# C indentation and fence match
	"crypt"		CRYPT		0		CRYPT	# encrytion mode active
	"dos"		DOS		WFHARD|WFMODE		# "dos" mode -- lines end in crlf
	"IgnoreCase"	IGNCASE		0			# Exact matching for searches
	"magic"		MAGIC		0			# regular expressions in search
	"ShowMatch"	SHOWMAT		0			# auto-indent
	"ShowMoDe"	SHOWMODE	WFMODE			# show insert/replace/command mode
	"TabInsert"	TABINSERT	0			# okay to insert tab chars
	"TagRelative"	TAGSRELTIV	0			# tags are relative to tagsfile path
	"terse"		TERSE		0			# be terse -- suppress messages
	"view"		VIEW		WFMODE			# read-only buffer
	"WrapScan"	SWRAP 		0			# wrap-around search mode
	"WrapWords"	WRAP		0			# word wrap
int								# VAL_ prefix
	"AutoSaveCNT"	ASAVECNT	0			# how often auto-saves occur
	"C-ShiftWidth"	C_SWIDTH	0			# shift-width for C buffers
	"C-TabStop"	C_TAB		WFHARD			# tab spacing for C buffers
	"FillCol"	FILL		0			# column for paragraph reformat, and line break
	"ShiftWidth"	SWIDTH		0			# shiftwidth for ^T/^D/<</>>
	"TabStop"	TAB		WFHARD			# tab spacing for most buffers
	"TagLength"	TAGLEN		0			# required significant length for tag lookups
	"UndoLimit"	UNDOLIM		0			# how much undo stack is saved
	"WrapMargin"	WRAPMARGIN	0			# width of right margin for autowrap
string								# VAL_ prefix
	"tags"		TAGS		0			# list of tags files
regex								# VAL_ prefix
	"comments"	COMMENTS	0			# matches leading comment for comment reformatting
	"paragraphs"	PARAGRAPHS	0			# delimits a paragraph
	"sections"	SECTIONS	0			# delimits a section
	"sentences"	SENTENCES	0			# delimits a sentence

.windows
bool								# WMD prefix
	"LIst"		LIST		WFHARD			# "list" mode -- show tabs and EOL
	"NUmber"	NUMBER		WFMODE|WFHARD		# line-numbers shown
	"HorizScroll"	HORSCROLL	0			# scroll whole screen
int								# VAL_ prefix
	"SIDEways"	SIDEWAYS	WFMODE|WFHARD		# sideways offset for display
color
	"fcolor"	FCOLOR		WFHARD|WFCOLR	COLOR	# foreground color
	"bcolor"	BCOLOR		WFHARD|WFCOLR	COLOR	# background color
#
# The "environment" variables are similar to modes, but are not so neatly
# organized into groups of universal/buffer/window.
.environment
"cbufname"	CBUFNAME		# current buffer name
"cfilname"	CFNAME			# current file name
"char"		CURCHAR			# current character under the cursor
"curcol"	CURCOL			# current column pos of cursor
"curline"	CURLINE			# current line in file
"cwd"		CWD			# current directory
"cwline"	CWLINE			# current screen line in window
"debug"		DEBUG			# macro debugging
"directory"	DIRECTORY		# controls location of temp-files
"discmd"	DISCMD			# display commands on command line
"disinp"	DISINP			# display command line input characters
"flicker"	FLICKER			# flicker suppression
"font"		FONT		X11	# current font
"identifier"	IDENTIF			# current identifier
"kill"		KILL			# kill buffer (read only)
"lastkey"	LASTKEY			# last keyboard char struck
"line"		LINE			# text of current line
"llength"	LLENGTH			# length of current line
"match"		MATCH			# last matched magic pattern
"pagelen"	PAGELEN			# number of lines used by editor
"pagewid"	CURWIDTH		# current screen width
"palette"	PALETTE			# current palette string
"pathname"	PATHNAME		# current path-like word
"pending"	PENDING			# type ahead pending flag
"progname"	PROGNAME		# returns current prog name - "vile"
"qidentifier"	QIDENTIF		# current qualified identifier
"ram"		RAM			# ram in use by malloc
"replace"	REPLACE			# replacement pattern
"search"	SEARCH			# search pattern
"seed"		SEED			# current random number seed
"shell"		SHELL			# shell-environment variable 
"sres"		SRES			# current screen resolution
"status"	STATUS			# returns the status of the last command
"target"	TARGET			# target for line moves
"tpause"	TPAUSE			# length to pause for paren matching
"version"	VERSION			# current version number
"wline"		WLINE			# # of lines in current window
"word"		WORD			# current word

.functions
"abs"	ABS		MONAMIC		# absolute value of a number
"add"	ADD		DYNAMIC		# add two numbers together
"and"	AND		DYNAMIC		# logical and
"asc"	ASCII		MONAMIC		# char to integer conversion
"bin"	BIND		MONAMIC		# lookup what function name is bound to a key
"cat"	CAT		DYNAMIC		# concatenate string
"chr"	CHR		MONAMIC		# integer to char conversion
"div"	DIV		DYNAMIC		# division
"env"	ENV		MONAMIC		# retrieve a system environment var
"equ"	EQUAL		DYNAMIC		# logical equality check
"gre"	GREATER		DYNAMIC		# logical greater than
"gtk"	GTKEY		NILNAMIC	# get 1 character
"ind"	IND		MONAMIC		# evaluate indirect value
"lef"	LEFT		DYNAMIC		# left string(string, len)
"len"	LENGTH		MONAMIC		# string length
"les"	LESS		DYNAMIC		# logical less than
"low"	LOWER		MONAMIC		# lower case string
"mid"	MID		TRINAMIC	# mid string(string, pos, len)
"mod"	MOD		DYNAMIC		# modulo
"neg"	NEG		MONAMIC		# negate
"not"	NOT		MONAMIC		# logical not
"or"	OR		DYNAMIC		# logical or
"rd"	READABLE	MONAMIC		# is a file readable?
"rig"	RIGHT		DYNAMIC		# right string(string, pos)
"rnd"	RND		MONAMIC		# get a random number
"seq"	SEQUAL		DYNAMIC		# string logical equality check
"sgr"	SGREAT		DYNAMIC		# string logical greater than
"sin"	SINDEX		DYNAMIC		# find the index of one string in another
"sle"	SLESS		DYNAMIC		# string logical less than
"sub"	SUB		DYNAMIC		# subtraction
"tim"	TIMES		DYNAMIC		# multiplication
"tru"	TRUTH		MONAMIC		# Truth of the universe logical test
"upp"	UPPER		MONAMIC		# uppercase string
"wr"	WRITABLE	MONAMIC		# is a file writeable?
