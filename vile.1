.\" obligatory man page for vile
.\" $Header: /usr/build/VCS/pgf-vile/RCS/vile.1,v 1.4 1994/07/11 22:56:20 pgf Exp $
.TH VILE 1
.SH NAME
vile \- \fBVI L\fRike\fR \fBE\fRmacs
.SH SYNOPSIS
.B "vile [-hVv] [-s\fIpattern\fB] [+\fI/pattern\fB] [-t\fItag\fB] [-g\fINNN\fB] [+\fINNN\fB] [@\fIcmdfile\fB] [\fIfilename\fB]..."
.SH DESCRIPTION
.I vile
is a text editor.  This man page is fairly terse.  More information can
be obtained from the internal help, available with the \fB-h\fR option
or by using the ":help" command from within
.IR vile .
.SH OPTIONS
.IP "+NNN and -gNNN"
.I vile
will begin the session on the first file at the specified line number.
.IP "\fB+/\fIpattern\fR or \fB-s\fR \fIpattern\fR"
In the first file,
.I vile
will execute an initial search for the given pattern.
.IP -t
The -t option specifies a "tag".
.I vile
will edit the file containing, and place the cursor at, that tag.
This requires a tagsfile created by the 
.IR ctags (1)
command.
.IP -h
Invokes
.I vile
on the helpfile.
.IP -v
Invokes
.I vile
in "view" mode \- no changes are permitted to
the buffer in this mode.  (This will also be true if
.I vile
is invoked as
.IR view .)
.IP -V
.I vile
will report its version number.
.SH "INVOCATION"
vile will edit the files specified on the command line.  If no files
are specified, and standard input is not connected to a terminal, then
vile will bring up a buffer containing the output of the pipe it is
connected to, and will re-open /dev/tty for commands.  Files (except for
the first) are not actually read into buffers until "visited".  All buffers
are kept in memory: machines with not much memory or swap space may
have trouble with this.
.SH "SPIRIT"
.I vile
retains the "finger-feel", if you will, of
.IR vi ,
while adding the
multiple buffer/multiple window features of emacs and other editors.
It is definitely not a vi clone, in that some substantial stuff is
missing, and the screen doesn't look quite the same.  
The things that you tend to type over and
over probably work -- things done less frequently, like configuring
a startup file, are quite different.
But what
matters most is that one's "muscle memory" does the right thing
to the text in front of you, and that is what
.I vile
tries to do for vi users.
.SH "COMMANDS"
Please refer to the help available within 
.I vile
for
.IR vile -specific
commands.
That document, however, assumes familiarity with vi.
.PP
Additional documentation on writing macros using the internal scripting
language can be found in the file "macros.doc", distributed with the vile
source.
.SH "STARTUP"
.I vile
will read initial commands from a
.I .vilerc
file in the current or home directories.
See the help file for examples of how this can be used.
.SH "SEE ALSO"
Your favorite vi document.
.SH "DEBTS and CREDITS"
.I vile 
was originally built from a copy of microEmacs, so a large debt of gratitude
is due to the developers of that program.  A lot of people have helped with
code and bug reports on
.IR vile .
Names are named at the bottom of the help file.
.SH "AUTHOR"
.I vile
was created by Paul Fox.  That's Paul
.IR G .
Fox.  There's another editor, a clone of
.I BRIEF
called
.IR crisp ,
which was written by a Paul
.IR D .
Fox.  I'm not him.
.SH "BUGS"
The "\fBVI L\fRike\fR \fBE\fRmacs" joke isn't really funny.  It only
sounds that way.  :-)
